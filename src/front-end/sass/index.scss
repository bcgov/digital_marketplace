// Imports

@import './font';

// Custom Bootstrap variable overrides.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 1100px,
  lg: 1200px
);

$container-max-widths: (
  sm: 720px,
  md: 960px,
  lg: 1140px
);

$spacer: 1rem;

// 'h' stands for 'half'
$spacers: (
  n4h: ($spacer * -2),
	n6:  ($spacer * -4),
	n7:  ($spacer * -5),
	n8:  ($spacer * -6),
	n9:  ($spacer * -8),
	n10: ($spacer * -10),
  4h:  ($spacer * 2),
	6:   ($spacer * 4),
	7:   ($spacer * 5),
	8:   ($spacer * 6),
	9:   ($spacer * 8),
	10:  ($spacer * 10)
);

$grid-gutter-width: $spacer * 2;

// Grays.
$gray-100: #f8f9fa;
$gray-200: #e9ecef;
$gray-300: #dee2e6;
$gray-400: #ced4da;
$gray-500: #adb5bd;
$gray-600: #6C757D;
$gray-700: #495057;
$gray-800: #343a40;
$gray-900: #212529;

// Colors.
$white:            #ffffff;
$black:            #000000;
$blue:             #0C99D6;
$blue-alt:         #17A2B8;
$blue-alt-2:       #1e98d2;
$blue-dark:        #003366;
$blue-dark-alt:    #38598A;
$blue-dark-alt-2:  #0F4C8B;
$blue-light:       #E7EDF3;
$blue-light-alt:   #E9F5FB;
$blue-light-alt-2: #F4FAFD;
$purple:           #52489C;
$purple-light:     lighten($purple, 20);
$yellow:           #FCBA19;
$yellow-light: #FDD675;
$red:              #DC3545;
$green:            #2E8540;
$orange:           #FD7E14;

// Bootstrap Utility colors.
$body-color:                        $gray-900;
$border-color:                      $gray-400;
$nav-tabs-border-color:             $border-color;
$nav-tabs-link-hover-border-color:  $gray-200 $gray-200 transparent;
$nav-tabs-link-active-bg:           $white;
$nav-tabs-link-active-border-color: $nav-tabs-border-color $nav-tabs-border-color transparent;
$component-active-bg:               $blue;
$custom-control-indicator-checked-disabled-bg: rgba($component-active-bg, 0.5);
$link-color:                        $blue;
$dropdown-link-hover-bg:            $gray-100;
$dropdown-link-active-bg:           $gray-200;
$table-hover-bg: $blue-light-alt;

// App-Specific Utility Colors
// App Views
$c-body-bg: $blue-dark;
$c-nav-bg: $blue-dark;
$c-nav-bg-alt: $blue-dark-alt;
$c-nav-border-bottom: $yellow;
$c-nav-fg: $white;
$c-nav-fg-alt: $white;
$c-footer-bg: $blue-dark;
$c-footer-separator: $blue-dark-alt;
$c-footer-border-top: $yellow;
$c-toast-info-icon: $blue-alt;
$c-toast-error-icon: $red;
$c-toast-warning-icon: $orange;
$c-toast-success-icon: $green;
$c-sidebar-instructional-bg: $blue-light;
$c-sidebar-menu-link-inactive-fg: $blue;
$c-sidebar-menu-link-inactive-icon: $blue-dark-alt-2;
$c-sidebar-menu-link-active-fg: $white;
$c-sidebar-menu-link-active-icon: $blue;
$c-sidebar-menu-link-active-bg: $blue-dark-alt-2;
$c-sidebar-menu-mobile-caret: $white;
// Pages
$c-landing-role-heading: $blue-dark;
$c-landing-role-icon: $yellow;
$c-landing-testimonial-source: $yellow;
$c-landing-small-underline: $yellow;
$c-landing-programs-bg: $blue-light-alt-2;
$c-landing-stats-bg: $blue-dark-alt-2;
$c-landing-stats-stat: $yellow-light;
$c-landing-stats-description: $white;
$c-learn-more-bg: $blue-light-alt;
$c-dashboard-bg: $blue-light-alt-2;
$c-opportunity-list-learn-more-bg: $blue-light-alt-2;
$c-opportunity-list-card-hover-bg: $blue-light-alt-2;
$c-opportunity-create-bg: $blue-light-alt-2;
$c-opportunity-view-got-questions-icon: $blue;
$c-opportunity-view-got-questions-bg: $blue-light-alt;
$c-opportunity-view-apply-bg: $blue-light-alt;
$c-proposal-swu-form-team-question-response-heading: $blue-dark;
$c-proposal-swu-form-scrum-master: $purple;
$c-user-profile-permission: $purple;
// Misc. Views
$c-report-card-bg: $blue-light-alt;
$c-report-card-icon-default: $blue-dark-alt-2;
$c-report-card-icon-highlight: $yellow;
$c-capability-ft-bg: $purple;
$c-capability-pt-bg: $purple-light;
$c-capability-grid-switch: $purple;
$c-how-it-works-item-bg: $purple;
$c-skills-bg: $purple;
$c-multi-select-item-bg: $purple;
$c-multi-select-item-remove: $purple-light;
$c-form-field-required: $yellow;
$c-table-icon-check: $gray-700;
$c-table-icon-times: $gray-500;
// Static HTML Pages
$c-static-html-bg: $blue-dark;
$c-static-html-fg: $white;

$app-utility-colors: (
  // App Views
  'c-body-bg': $c-body-bg,
  'c-nav-bg': $c-nav-bg,
  'c-nav-bg-alt': $c-nav-bg-alt,
  'c-nav-border-bottom': $c-nav-border-bottom,
  'c-nav-fg': $c-nav-fg,
  'c-nav-fg-alt': $c-nav-fg-alt,
  'c-footer-bg': $c-footer-bg,
  'c-footer-separator': $c-footer-separator,
  'c-footer-border-top': $c-footer-border-top,
  'c-toast-info-icon': $c-toast-info-icon,
  'c-toast-error-icon': $c-toast-error-icon,
  'c-toast-warning-icon': $c-toast-warning-icon,
  'c-toast-success-icon': $c-toast-success-icon,
  'c-sidebar-instructional-bg': $c-sidebar-instructional-bg,
  'c-sidebar-menu-link-inactive-fg': $c-sidebar-menu-link-inactive-fg,
  'c-sidebar-menu-link-inactive-icon': $c-sidebar-menu-link-inactive-icon,
  'c-sidebar-menu-link-active-fg': $c-sidebar-menu-link-active-fg,
  'c-sidebar-menu-link-active-icon': $c-sidebar-menu-link-active-icon,
  'c-sidebar-menu-link-active-bg': $c-sidebar-menu-link-active-bg,
  'c-sidebar-menu-mobile-caret': $c-sidebar-menu-mobile-caret,
  // Pages
  'c-landing-role-heading': $c-landing-role-heading,
  'c-landing-role-icon': $c-landing-role-icon,
  'c-landing-testimonial-source': $c-landing-testimonial-source,
  'c-landing-small-underline': $c-landing-small-underline,
  'c-landing-programs-bg': $c-landing-programs-bg,
  'c-landing-stats-bg': $c-landing-stats-bg,
  'c-landing-stats-stat': $c-landing-stats-stat,
  'c-landing-stats-description': $c-landing-stats-description,
  'c-learn-more-bg': $c-learn-more-bg,
  'c-dashboard-bg': $c-dashboard-bg,
  'c-opportunity-list-learn-more-bg': $c-opportunity-list-learn-more-bg,
  'c-opportunity-list-card-hover-bg': $c-opportunity-list-card-hover-bg,
  'c-opportunity-create-bg': $c-opportunity-create-bg,
  'c-opportunity-view-got-questions-icon': $c-opportunity-view-got-questions-icon,
  'c-opportunity-view-got-questions-bg': $c-opportunity-view-got-questions-bg,
  'c-opportunity-view-apply-bg': $c-opportunity-view-apply-bg,
  'c-proposal-swu-form-team-question-response-heading': $c-proposal-swu-form-team-question-response-heading,
  'c-proposal-swu-form-scrum-master': $c-proposal-swu-form-scrum-master,
  'c-user-profile-permission': $c-user-profile-permission,
  // Misc. Views
  'c-report-card-bg': $c-report-card-bg,
  'c-report-card-icon-default': $c-report-card-icon-default,
  'c-report-card-icon-highlight': $c-report-card-icon-highlight,
  'c-capability-ft-bg': $c-capability-ft-bg,
  'c-capability-pt-bg': $c-capability-pt-bg,
  'c-capability-grid-switch': $c-capability-grid-switch,
  'c-how-it-works-item-bg': $c-how-it-works-item-bg,
  'c-skills-bg': $c-skills-bg,
  'c-multi-select-item-bg': $c-multi-select-item-bg,
  'c-multi-select-item-remove': $c-multi-select-item-remove,
  'c-form-field-required': $c-form-field-required,
  'c-table-icon-check': $c-table-icon-check,
  'c-table-icon-times': $c-table-icon-times,
  // Static HTML Pages
  'c-static-html-bg': $c-static-html-bg,
  'c-static-html-fg': $c-static-html-fg
);

// Theme colors.
// Bootstrap updates the theme map based on these variables,
// so we don't need to update the map at all.
$primary:      $blue;
$secondary:    $gray-600;
$info:         $blue-dark-alt-2;
$warning:      $orange;
$danger:       $red;
$success:      $green;
$body:         $body-color;
$light:        $gray-100;
$dark:         $gray-800;

$theme-colors:   map-merge(
  (
    'white':     $white,
    'black':     $black,
    'primary':   $primary,
    'secondary': $secondary,
    'info':      $info,
    'warning':   $warning,
    'danger':    $danger,
    'success':   $success,
    'body':      $body,
    'light':     $light,
    'dark':      $dark
  ),
  $app-utility-colors
);

// Other overrides.
$border-width: 1px;

$font-family-sans-serif: "BCSans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$font-weight-bold:       500;
$font-weight-bolder:     700;

$font-size-base: 1rem;
$h1-font-size:   $font-size-base * 2.5;

$input-btn-padding-x:    0.75rem;
$input-btn-padding-x-sm: 0.75rem;
$input-btn-padding-x-lg: 1.25rem;

$badge-font-size: 80%;

$border-radius-sm: 0.2rem;
$border-radius:    0.3em;
$border-radius-lg: 0.5rem;

$enable-validation-icons: false;

// Custom variables.

$transition-duration: 240ms;

// Import Bootstrap.

@import 'bootstrap';

// Mixins.

// Style an input's placeholder.
// Supports regular placeholder, plus date/time input fields.
@mixin placeholder() {
  &[value=""]::-webkit-datetime-edit, //date/time selector
  &:not([value])::-webkit-datetime-edit, //date/time selector
  &::placeholder {
    @content;
  }
}


// Global styles.

* {
  box-sizing: border-box;
}

html,
body {
  background: $c-body-bg;
}

html {
  font-size: 16px;

  @media print {
    background: none;
  }
}

body {
  min-width: 320px;
  width: 100%;
  overflow-x: hidden;
}

input:-ms-clear {
  display: none;
}

input[type="date"],
input[type="time"] {

  &::-ms-clear {
    display: none;
  }

  &::-webkit-clear-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    display: none;
  }
}

input,
textarea {

  @include placeholder {
    color: $secondary;
  }

  &:disabled,
  &.disabled {

    @include placeholder {
      color: transparent;
      opacity: 0;
    }

  }
}

textarea {
  resize: none;
}

.app {
  transition-property: filter, opacity;
  transition-duration: $transition-duration;
  transition-timing-function: ease-out;

  .page-container {
    z-index: 2;
  }

  &.in-transition {
    pointer-events: none !important;
    filter: grayscale(30%);
    opacity: 0.9;
  }
}

nav {

  $main-nav-top-height: 67px;
  $main-nav-bottom-navbar-height: 56px;
  &.main-nav {
    z-index: 1000; // Modals have a 1050 z-index, and should be above the nav.
    position: sticky;
    top: -1 * $main-nav-top-height - 1px;

    .main-nav-top-navbar-wrapper {
      position: relative;
      z-index: 2;
    }

    .main-nav-top-navbar {
      background: $c-nav-bg;
      width: 100%;
      height: $main-nav-top-height;
      position: relative;
      z-index: 2;
      border-bottom: 2px solid $c-nav-border-bottom;
    }

    .main-nav-mobile-menu {
      @extend .py-4;
      @extend .d-md-none;
      background: $c-nav-bg-alt;

      @mixin menu-transition($opacity-delay) {
        transition: transform $transition-duration ease-out
                  , opacity 0ms linear $opacity-delay;
      }

      overflow: hidden;
      position: absolute;
      z-index: 1;
      top: 100%;
      left: 0;
      width: 100%;
      // Transition properties.
      @include menu-transition($transition-duration);
      transform: translateY(-100%);
      opacity: 0;

      &.open {
        @extend .shadow;
        @include menu-transition(0ms);
        transform: translateY(0);
        opacity: 1;
      }
    }

    .main-nav-bottom-navbar {

      &.mobile,
      &.desktop {
        @extend .align-items-center;
        @extend .shadow;
        background: $c-nav-bg-alt;
        height: $main-nav-bottom-navbar-height;
        z-index: 1;
      }

      &.desktop {
        @extend .d-none;
        @extend .d-md-flex;
      }

      &.mobile {
        @extend .d-flex;
        @extend .d-md-none;
      }
    }
  }

  .transition-indicator {
    display: none;

    .in-transition & {
      display: block;
    }
  }

  .dropdown-toggle img {
    border: 3px solid transparent;
  }

  .dropdown-toggle:hover img {
    border-color: $c-nav-bg-alt;
  }
}

footer {
  border-top: 2px solid $c-footer-border-top;
}

// Custom Bootstrap style overrides.

.container {
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: stretch;
}

.dropdown-menu {
  min-width: 100%;
}

.btn-warning,
.badge-warning {
  color: $white !important;
}

.btn,
button {

  &.disabled {
    pointer-events: none;
  }

  &.disabled:not(.btn-link):not(.dropdown-item),
  &:disabled:not(.btn-link):not(.dropdown-item) {
    background-color: $secondary !important;
    border-color: $secondary !important;
    color: $white !important;
    box-shadow: none !important;
  }
}

a,
.a {
  cursor: pointer;

  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    pointer-events: none;

    &:hover {
      text-decoration: none;
    }
  }

  &.nav-link:focus {
    outline: none;
  }
}

.disabled,
*:disabled {
  cursor: not-allowed !important;
}

.blockquote {
  margin-left: $spacer;
  padding-left: $spacer;
  border-left: 2px solid $gray-200;
}

blockquote {
  @extend .blockquote;
}

table {
  @extend .table;

  thead {
    @extend .small;
    @extend .text-secondary;
    @extend .text-uppercase;
    @extend .font-weight-bold;
    @extend .bg-light;
  }

  .table-show-on-hover {
    visibility: hidden;
  }

  tr:hover .table-show-on-hover {
    visibility: visible;
  }

  tbody tr:last-of-type td {
    border-bottom: 1px solid $table-border-color;
  }
}

pre {
  @extend .bg-light;
  @extend .p-3;
  @extend .border;
  @extend .rounded;
}

label {
  @extend .py-1;

  .custom-checkbox &,
  .custom-radio & {
    @extend .font-size-base;
    @extend .py-0;
  }
}

nav.navbar .nav-link:hover {
  text-decoration: underline;
}

.card-body {
  @extend .p-4;
}

.badge {
  display: inline-flex;
  padding: 0.5em 0.75em;
  letter-spacing: 0.75px;
}

.custom-radio,
.custom-checkbox {

  .custom-control-label::before {
    transition: none;
  }
}

.spinner-border-sm {
  border-width: 0.15em;
}

// Custom utilities.

.overline {
  text-transform: uppercase;
  font-weight: bold;
  font-size: 10px;
  line-height: 14px;
  letter-spacing: 1.5px;
}

.shadow-hover {
  transition: box-shadow $transition-duration;
  &:hover {
    @extend .shadow;
  }
}

.h-input {
  min-height: $input-height !important;
}

.h-input-sm {
  min-height: $input-height-sm !important;
}

.h-input-lg {
  min-height: $input-height-lg !important;
}

.o-0 {
  opacity: 0 !important;
}

.o-25 {
  opacity: 0.25 !important;
}

.o-50 {
  opacity: 0.50 !important;
}

.o-75 {
  opacity: 0.75 !important;
}

.o-100 {
  opacity: 1 !important;
}

.font-size-extra-small {
  font-size: $font-size-sm*0.8;
}

.font-size-small {
  font-size: $font-size-sm;
}

.font-size-base {
  font-size: $font-size-base;
}

.font-size-large {
  font-size: $font-size-lg;
}

.text-decoration-underline {
  text-decoration: underline !important;
}

.overline {
  font-weight: $font-weight-bold;
  font-size: 10px;
  letter-spacing: 1.5px;
  line-height: 14px;
  text-transform: uppercase;
}

// Create classes for each of the text colors
// that apply the color when the element is being hovered.
// .text-hover-primary, .text-hover-danger, etc.
@each $color, $value in $theme-colors {
  .text-hover-#{$color} {
    @include hover {
      color: darken($value, $emphasized-link-hover-darken-percentage) !important;
    }
    &:focus {
      color: darken($value, $emphasized-link-hover-darken-percentage) !important;
    }
  }
}
@each $color, $value in $grays {
  .text-gray-#{$color} {
    color: $value;
  }
  .text-hover-gray-#{$color} {
    @include hover {
      color: darken($value, $emphasized-link-hover-darken-percentage) !important;
    }
    &:focus {
      color: darken($value, $emphasized-link-hover-darken-percentage) !important;
    }
  }
}

//Create bg classes.
@each $color, $value in $colors {
  .bg-hover-#{$color} {
    @include hover {
      background: $value !important;
    }
    &:focus {
      background: $value !important;
    }
  }
}
@each $color, $value in $theme-colors {
  .bg-hover-#{$color} {
    @include hover {
      background: $value !important;
    }
    &:focus {
      background: $value !important;
    }
  }
}

.text-wrap {
  white-space: normal !important;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {

    .sticky#{$infix} {
      position: sticky;
      z-index: 2;
      top: 6rem;
      max-height: calc(100vh - 6rem);
      overflow-y: auto;

      &::after {
        content: " ";
        position: absolute;
        top: -100%;
        left: 0;
        width: 100%;
        height: 100%;
        background: inherit;
      }
    }
  }

  @if ($breakpoint == 'xs') or ($breakpoint == 'sm') {

    @include media-breakpoint-down(sm) {

      .app:not(.contextual-actions-visible) .sticky#{$infix} {
        top: 1rem;
      }
    }
  }
}

// Custom components

.toast-wrapper {
  position: fixed;
  bottom: map-get($spacers, 4);
  right: map-get($spacers, 4);
  width: 400px;
  z-index: 1001; // Above nav, below modals

  @include media-breakpoint-down(xs) {
    left: map-get($spacers, 3);
    width: auto;
  }

  @include media-breakpoint-down(sm) {
    right: map-get($spacers, 3);
    bottom: map-get($spacers, 3);
  }

  .toast {
    max-width: unset;

    &-body > *:last-child,
    &-body > *:last-child > *:last-child {
      margin-bottom: 0 !important;
    }
  }
}

.sidebar {

  @include media-breakpoint-down(sm) {
    background-color: $white !important;
    z-index: 3;
  }
}

.react-select-container {
  flex-grow: 1;

  // Handle validation states.
  @each $state, $data in $form-validation-states {
    $color: map-get($data, color);
    $icon: map-get($data, icon);

		&.is-#{$state} {

      .react-select__control {
        border-color: $color;

        @if $enable-validation-icons {
          padding-right: $input-height-inner;
          background-image: $icon;
          background-repeat: no-repeat;
          background-position: center right $input-height-inner-quarter;
          background-size: $input-height-inner-half $input-height-inner-half;
        }

        &--is-focused {
          border-color: $color;
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }

        ~ .#{$state}-feedback,
        ~ .#{$state}-tooltip {
          display: block;
        }
      }
    }
  }

  // Standard control styles.
  .react-select {

    &__control {
      @extend .form-control;
      @extend .p-0;
      display: flex;
      min-height: $input-height;
      height: auto;

      &--is-disabled {
        background-color: $input-disabled-bg !important;
        opacity: 1 !important;
        cursor: not-allowed !important;

        .react-select__placeholder {
          opacity: 0 !important;
        }
      }

      &--is-focused {
        // Copied from:
        // https://github.com/twbs/bootstrap/blob/de1a6e3201a2f047c5abd2430795be32d37e9a35/scss/mixins/_forms.scss#L15
        color: $input-focus-color;
        background-color: $input-focus-bg;
        border-color: $input-focus-border-color;
        outline: 0;
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
          box-shadow: $input-box-shadow, $input-focus-box-shadow;
        } @else {
          box-shadow: $input-focus-box-shadow;
        }
      }
    }

    &__placeholder {
      color: $input-placeholder-color;
      white-space: nowrap;
    }

    &__option {
      color: $input-color;

      &--is-focused {
        background: $input-btn-focus-color;
      }

      &--is-selected {
        background: rgba($component-active-bg, 0.75) !important;
        color: $white;
      }
    }
  }
}

.markdown {

  img {
    width: 100%;
    max-width: 600px;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {

    &:not(:first-child) {
      margin-top: 1.5*$spacer;
    }
  }

  img,
  blockquote,
  table,
  pre,
  hr {
    margin-top: 1.5*$spacer;
    margin-bottom: 1.5*$spacer;
  }

  & > *:last-child {
    @extend .mb-0;
  }

}

.vi-card {
  margin-bottom: 2rem;

  @include media-breakpoint-up(md) {
    .card {
      min-height: 440px;
    }
  }
}

// Page-specific overrides

.route-orgSWUTerms,
.route-content {
  .content-sprint-with-us-terms-and-conditions,
  .content-code-with-us-terms-and-conditions {
    .markdown {
      ul {
        list-style-type: none;

        li {
          margin-bottom: 1rem;
        }

        ul {
          margin-top: 1rem;
        }
      }
    }
  }
}
