apiVersion: v1
kind: Template
metadata:
  annotations:
    description: |-
      Patroni Postgresql database cluster (pre-requisites)
    iconClass: icon-postgresql
    openshift.io/display-name: Patroni Postgresql pre-requisites
    openshift.io/long-description: This template deploys patroni pre-requisites for an HA DB (secret, service account, role)
    tags: postgresql
  name: patroni-pgsql-pre-requisite
labels:
  app.kubernetes.io/component: database
  app.kubernetes.io/name: patroni
  app.kubernetes.io/managed-by: template

objects:
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: ${NAME}-${APP_GROUP}-${TAG_NAME}
      cluster-name: ${NAME}-${APP_GROUP}-${TAG_NAME}
    annotations:
      as-copy-of: "template.${NAME}-${APP_GROUP}-${TAG_NAME}-patroni"
    name: ${NAME}-${APP_GROUP}-${TAG_NAME}-secret
  stringData:
    replication-username: ${PATRONI_REPLICATION_USERNAME}
    replication-password: ${PATRONI_REPLICATION_PASSWORD}
    superuser-username: ${PATRONI_SUPERUSER_USERNAME}
    superuser-password: ${PATRONI_SUPERUSER_PASSWORD}
    DATABASE_PASSWORD: ${APP_DB_PASSWORD}
    DATABASE_NAME: ${APP_DB_NAME}
    DATABASE_USERNAME: ${APP_DB_USERNAME}
    DATABASE_PORT: '5432'

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      cluster-name: ${NAME}-${APP_GROUP}-${TAG_NAME}
    name: ${NAME}-${APP_GROUP}-${TAG_NAME}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      cluster-name: ${NAME}-${APP_GROUP}-${TAG_NAME}
    name: ${NAME}-${APP_GROUP}-${TAG_NAME}
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
    - delete
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
    - patch
    - update
    - create
    - list
    - watch
    - delete
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      cluster-name: ${NAME}-${APP_GROUP}-${TAG_NAME}
    name: ${NAME}-${APP_GROUP}-${TAG_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: ${NAME}-${APP_GROUP}-${TAG_NAME}
  subjects:
  - kind: ServiceAccount
    name: ${NAME}-${APP_GROUP}-${TAG_NAME}

parameters:
- description: The name of the application for labelling all artifacts.
  displayName: Application Name
  name: NAME
  required: true
  value: patroni

- name: APP_GROUP
  displayName: The application group name.
  required: true
  value: digmkt

- name: TAG_NAME
  displayName: The environment tag name (dev/test/prod)
  required: true
  value: prod

- description: Username of the superuser account for initialization.
  displayName: Superuser Username
  name: PATRONI_SUPERUSER_USERNAME
  value: postgres

- description: Password of the superuser account for initialization.
  displayName: Superuser Passsword
  name: PATRONI_SUPERUSER_PASSWORD
  generate: expression
  from: '[a-zA-Z0-9]{32}'

- description: Username of the replication account for initialization.
  displayName: Replication Username
  name: PATRONI_REPLICATION_USERNAME
  value: replication

- description: Password of the replication account for initialization.
  displayName: Repication Passsword
  name: PATRONI_REPLICATION_PASSWORD
  generate: expression
  from: '[a-zA-Z0-9]{32}'

- name: APP_DB_USERNAME
  value: digmkt

- name: APP_DB_NAME
  value: digmkt

- name: APP_DB_PASSWORD
  generate: expression
  from: '[a-zA-Z0-9]{32}'
