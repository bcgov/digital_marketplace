---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  annotations:
    description: Deployment template for ChromaDB vector database.
    tags: "chroma-${APP_GROUP}-${TAG_NAME}"
  name: "chroma-${APP_GROUP}-${TAG_NAME}-deploy"

objects:
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "chroma-${APP_GROUP}-${TAG_NAME}-pvc"
    labels:
      app: "chroma-${APP_GROUP}-${TAG_NAME}"
      app-group: "${APP_GROUP}"
      template: "chroma-deploy"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${PVC_SIZE}"
    selector: {}

- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "chroma-${APP_GROUP}-${TAG_NAME}-config"
  data:
    IS_PERSISTENT: "TRUE"
    PERSIST_DIRECTORY: /chroma/chroma
    CHROMA_SERVER_CORS_ALLOW_ORIGINS: "['*']"
    TZ: America/Vancouver

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "chroma-${APP_GROUP}-${TAG_NAME}"
    labels:
      app: "chroma-${APP_GROUP}-${TAG_NAME}"
      app-group: "${APP_GROUP}"
      template: "chroma-deploy"
  spec:
    strategy:
      type: Recreate
    replicas: 1
    test: false
    selector:
      app: "chroma-${APP_GROUP}-${TAG_NAME}"
      deploymentconfig: "chroma-${APP_GROUP}-${TAG_NAME}"
    template:
      metadata:
        labels:
          app: "chroma-${APP_GROUP}-${TAG_NAME}"
          app-group: "${APP_GROUP}"
          deploymentconfig: "chroma-${APP_GROUP}-${TAG_NAME}"
          template: "chroma-deploy"
      spec:
        volumes:
        - name: chroma-data
          persistentVolumeClaim:
            claimName: "chroma-${APP_GROUP}-${TAG_NAME}-pvc"
        containers:
        - name: "chroma-${APP_GROUP}-${TAG_NAME}"
          image: chromadb/chroma:${CHROMA_VERSION}
          ports:
          - containerPort: 8000
            protocol: TCP
          envFrom:
          - configMapRef:
              name: "chroma-${APP_GROUP}-${TAG_NAME}-config"
          resources:
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"
            limits:
              # cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - name: chroma-data
            mountPath: /chroma/chroma
          livenessProbe:
            httpGet:
              path: "/api/v1/heartbeat"
              port: 8000
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: "/api/v1/heartbeat"
              port: 8000
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 30
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext:
          fsGroup: 1001
        schedulerName: default-scheduler

- kind: Service
  apiVersion: v1
  metadata:
    name: "chroma-${APP_GROUP}-${TAG_NAME}"
    creationTimestamp:
    labels:
      app: "chroma-${APP_GROUP}-${TAG_NAME}"
      app-group: "${APP_GROUP}"
      template: "chroma-deploy"
  spec:
    ports:
    - name: 8000-tcp
      protocol: TCP
      port: 8000
      targetPort: 8000
    selector:
      deploymentconfig: "chroma-${APP_GROUP}-${TAG_NAME}"
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

parameters:
- name: APP_GROUP
  displayName: App Group
  required: true
  value: digmkt

- name: TAG_NAME
  displayName: Environment tag name.
  required: true
  value: dev

- name: CHROMA_VERSION
  displayName: ChromaDB Version
  required: true
  value: "1.0.12"

- name: PVC_SIZE
  displayName: Persistent Volume Size
  required: true
  value: 1Gi

- name: CPU_REQUEST
  displayName: Resources CPU Request
  required: true
  value: 25m

# - name: CPU_LIMIT
#   displayName: Resources CPU Limit
#   description: The resources CPU limit (in cores) for this build.
#   required: true
#   value: 100m

- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  required: true
  value: 128Mi

- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  required: true
  value: 512Mi
