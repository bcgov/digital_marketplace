---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  annotations:
    description: Deployment template for the Digital Marketplace AI service.
    tags: "${NAME}-${APP_GROUP}-${TAG_NAME}"
  name: "${NAME}-${APP_GROUP}-${TAG_NAME}-deploy"

objects:
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${NAME}-${APP_GROUP}-${TAG_NAME}-config"
  data:
    NODE_ENV: production
    PORT: '5000'
    CHROMA_URL: ${CHROMA_URL}
    DATABASE_SERVICE_NAME: ${DATABASE_SERVICE_NAME}-${APP_GROUP}-${TAG_NAME}
    TZ: America/Vancouver
    LOG_DEBUG: "1"

- kind: Secret
  apiVersion: v1
  metadata:
    name: "${NAME}-${APP_GROUP}-${TAG_NAME}-secret"
  stringData:
    DATABASE_URL: ${DATABASE_URL}

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-${APP_GROUP}-${TAG_NAME}"
    labels:
      app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
      app-group: "${APP_GROUP}"
      template: "${NAME}-deploy"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
    replicas: ${{REPLICAS}}
    test: false
    selector:
      app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
      deploymentconfig: "${NAME}-${APP_GROUP}-${TAG_NAME}"
    template:
      metadata:
        labels:
          app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
          app-group: "${APP_GROUP}"
          deploymentconfig: "${NAME}-${APP_GROUP}-${TAG_NAME}"
          template: "${NAME}-deploy"
      spec:
        containers:
        - name: "${NAME}-${APP_GROUP}-${TAG_NAME}"
          image: image-registry.openshift-image-registry.svc:5000/${IMAGE_NAMESPACE}/${NAME}-${APP_GROUP}-${TAG_NAME}:latest
          ports:
          - containerPort: 5000
            protocol: TCP
          envFrom:
          - secretRef:
              name: "${NAME}-${APP_GROUP}-${TAG_NAME}-secret"
          - configMapRef:
              name: "${NAME}-${APP_GROUP}-${TAG_NAME}-config"
          resources:
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
          livenessProbe:
            httpGet:
              path: "/health"
              port: 5000
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: "/health"
              port: 5000
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 30
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler

- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}-${APP_GROUP}-${TAG_NAME}"
    creationTimestamp:
    labels:
      app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
      app-group: "${APP_GROUP}"
      template: "${NAME}-deploy"
  spec:
    ports:
    - name: 5000-tcp
      protocol: TCP
      port: 5000
      targetPort: 5000
    selector:
      deploymentconfig: "${NAME}-${APP_GROUP}-${TAG_NAME}"
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

- kind: HorizontalPodAutoscaler
  apiVersion: autoscaling/v2
  metadata:
    name: "${NAME}-${APP_GROUP}-${TAG_NAME}-hpa-mem"
    labels:
      app: "${NAME}-${APP_GROUP}-${TAG_NAME}"
      app-group: "${APP_GROUP}"
      template: "${NAME}-deploy"
  spec:
    scaleTargetRef:
      apiVersion: apps.openshift.io/v1
      kind: DeploymentConfig
      name: "${NAME}-${APP_GROUP}-${TAG_NAME}"
    minReplicas: 2
    maxReplicas: 4
    metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

parameters:
- name: NAME
  displayName: Name
  required: true
  value: ai

- name: APP_GROUP
  displayName: App Group
  required: true
  value: digmkt

- name: TAG_NAME
  displayName: Environment tag name.
  required: true
  value: dev

- name: IMAGE_NAMESPACE
  displayName: Image Namespace
  required: true
  value: ccc866-tools

- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  required: true
  value: patroni-pg12

- name: CHROMA_URL
  displayName: ChromaDB Service URL
  required: true
  value: http://chroma-digmkt-dev:8000

- name: DATABASE_URL
  displayName: Database Connection URL
  required: false
  description: Optional database connection string for AI service

- name: CPU_REQUEST
  displayName: Resources CPU Request
  required: true
  value: 50m

- name: CPU_LIMIT
  displayName: Resources CPU Limit
  description: The resources CPU limit (in cores) for this build.
  required: true
  value: 200m

- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  required: true
  value: 256Mi

- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  required: true
  value: 512Mi

- name: REPLICAS
  displayName: The number of replicas to run
  required: true
  value: '2'
